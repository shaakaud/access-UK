0. Clone access-UK repo from the github:
   - Create ssh key on the new machine: ssh-keygen -t rsa
   - copy the public key ~/.ssh/id_rsa.pub
   - on the browser loginto github.com, go to settings by clicking myname on right.
   - Go to SSH and GPG keys
   - Create a new SSH key for the machine from where you are going to do git clone.
     Enter the .ssh/id_rsa.pub that you copied above
   - Now try to do git clone git@github.com:shaakaud/access-UK.git or any git operations under access-UK repo.
1. ln -s ~/access-UK/vim/vimfiles/vundle_vimrc .vimrc;
   mkdir ~/access-UK/vim/vimbundle;
   ln -s ~/access-UK/vim/vimbundle .vim;
   git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim;
   Then open vim and give :PluginInstall

   *****NOTE: The below issue has been fixed in latest bufexplorer****
   Note: Buffexplorer has an issue - https://github.com/jlanzarotta/bufexplorer/issues/37#issuecomment-119613896 (see comments by shaakaud). Fix is to do either of the below options (preferably option 1).

   Option 1:
   a. go to ~/.vim/bundle/bufexplorer/plugin. Do git apply ~/access-UK/vim/vim_bundle_bufexplorer.diff
   b. Also, i see that the latest bufexlorer plugin does not work with VIM version < 7.3. Get older version tag and checkout that version.
      go to ~/.vim/bundle/bufexplorer. Do "git tag -l". Get a older version and do "git checkout <tag>"
      As of now, i see v7.4.6 works with VIM 7.2 (beyond which it requires vim 7.3) and also this version already has the fix for the issue
      i reported (so no need to do git apply step a)

   Option 2:
   a. Open ~/access-UK/vim/vimbundle/bundle/bufexplorer/plugin/bufexplorer.vim.
   b. search for s:MapKeys function implementation
   c. In that function, you can see several lines starting with "nnoremap <script> <silent> <nowait> <buffer> .."
   d. Remove <nowait> from all these lines. Just change it to "nnoremap <script> <silent> <buffer>..."
   e. Close the files in VIM if you have oppened it. Reopen those files and you will see the issue is gone :-)

2. Issue following commands from ~/
ln -s ~/access-UK/bash/bashrc .bashrc;
ln -s ~/access-UK/bash/bashrc.local .bashrc.local;
ln -s ~/access-UK/bash/bash_profile .bash_profile;
ln -s ~/access-UK/bash/aliases_bash .aliases_bash;
ln -s ~/access-UK/bin/ ~/bin

3. Install zsh. Follow access-UK/zsh/README
   ln -s ~/access-UK/zsh/zshrc ~/.zshrc;ln -s ~/access-UK/zsh/zshrc.local ~/.zshrc.local;

4. ln -s ~/access-UK/others/netrc .netrc; ln -s ~/access-UK/others/screenrc .screenrc; ln -s ~/access-UK/others/inputrc .inputrc; ln -s ~/access-UK/gdb/gdbinit .gdbinit;

5. ln -s ~/access-UK/git/gitconfig .gitconfig; ln -s ~/access-UK/git/git-prompt.sh .git-prompt.sh; ln -s ~/access-UK/bin/git ~/bin/git

6. Download and install tmux: Follow instructions in
   centos:https://gist.github.com/rothgar/cecfbd74597cc35a6018
   ubuntu:sudo apt install tmux
   ln -s ~/access-UK/tmux/tmux.conf ~/.tmux.conf

   #To save tmux sessions AUTOMATICALLY in order to survive reboots (For fresh setup, just do step 1 in tmux>1.9 and just read other steps)
   #1. Install tmux plugin manager -  https://github.com/tmux-plugins/tpm
       - $ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
   #2. All required tmux plugins (tmux-resurrect, tmux-continuum) are already present in ~/access-UK/tmux/tmux.conf. No need to add any plugins.
   #3. If you are going to start first tmux session now only, then tmux.conf will get sourced automatically. Otherwise - tmux source ~/.tmux.conf
   #4. If you add new plugins in tmux.conf, and if tmux is already running, then inside tmux, Press prefix + I (capital i, as in Install) to fetch the plugin.
   #5. ******All the stored tmux environments are placed in ~/.tmux/resurrect/
   #6. If you want to manually save/restore: prefix + Ctrl-s - save, prefix + Ctrl-r - restore

7. Clone Docs-UK. cd; https://gitlab.com/shaakaud/Docs-UK.git;

8. Downnload solarized color scheme for Gnome terminal
   http://www.webupd8.org/2011/04/solarized-must-have-color-paletter-for.html
   (or)
   git clone https://github.com/Anthony25/gnome-terminal-colors-solarized.git ~/software/solarized-terminal
   cd ~/software/solarized-terminal
   ./set_dark.sh
   cd ~/software; git clone https://github.com/seebi/dircolors-solarized

9. Install for percol - This is for improved ctrl-r (searching history) - follow https://github.com/mooz/percol/blob/master/README.md#zsh-history-search
   cd ~/software/; git clone https://github.com/mooz/percol.git; cd percol;sudo python3 setup.py install;

10. Install xsel - To make ctl-c to copy to clipboard on tmux window
   sudo apt-get install xsel

11. Install asciidoc if required
   sudo yum install asciidoc

12. a) sudo yum install xsel
    b) Install Parcellite - Clip board manager - This will help to copy contents to clipboard when we vnc to centos machine from windows m/c and copy some contents to clipboard
    and try to paste it to windows m/c.
    Download from http://parcellite.sourceforge.net/. Copy the *.tar.gz file to ~/software/ and untar it tar -xvf parcellite-*.tar.gz
    Follow the instructions in README for installation.
    Enable this from Centos GUI - menu - Applications->Accessories->Parcellite

13. Download the mergetool that is used in gitconfig. Make sure ~/bin/ is there in the $PATH
    cd ~/bin/; wget 'https://github.com/whiteinge/dotfiles/raw/master/bin/diffconflicts';
    chmod +x diffconflicts;

14. Install mosh server by following the link - http://www.unixmen.com/mosh-a-brief-introduction/
    First install epel by following step - "3.1 The easy method: (using yum)" and then do "sudo yum install mosh" as described in this link.
    (or)
    ubuntu: sudo apt-get install mosh

15. Make sure the executable scripts has "+x" permission in ~/access-UK/alu/ and ~/access-UK/bin

16. fzf: Install fzf from https://github.com/junegunn/fzf
    a. cd ~/software; git clone --depth 1 https://github.com/junegunn/fzf.git; cd fzf; ./install
    b. ln -s ~/software/fzf ~/.fzf
    c. After installing fzf, make sure this installation has not modified my ~/.bashrc and ~/.zshrc. My git hub bashrc.local and zshrc.local already should have these changes.
    d. mkdir ~/tmuxbuffer/; touch ~/tmuxbuffer/resultcmdsh;
    e. sudo yum install inotify-tools
    Below info comes from my dot files present in my git repo. No need to do anything for points 1-3.
    1. vundle_vimrc: Contains changes to gG/gA to fzf functions and structures (right side of vim screen). When selected, it opens the function/struct in cscope
    2. tmux.conf: tmux-esc-charac-y - will pull out ctrl-r kind of window at the bottom and shows all the tags from Txt files / my cheat sheets ( ~/Docs-UK/Versa/txtfiles.txt)
    3. bashrc.local_for_zsh - cmdsh,cmdsh2ndpart -   Files that needs to be indexed by fzf (tmux) is present in ~/Docs-UK/Versa/txtfiles.txt. These two functions cat's all these
                              files and invokes fzf-tmux by giving the cat'ed file as input.
17. Install free dns (noip.com). Refer the README from access-UK/others/noipupdate/
18. Installed Unite.vim plugin. This inturn requires Plugin 'Shougo/vimproc.vim' for unite source "file_rec/async" to work.  Inorder for vimproc to work you need to do a make by doing :VimProcInstall in VIM window.
19. Install powerline fonts - which will be used by vim-airline plugin
    cd ~/software/
    git clone https://github.com/powerline/fonts
    cd fonts; sudo ./install.sh
    Go to terminal profile preferences -> General. Change Font to DejaVu Sans Mono for Powerline Book 12
20. (OPTIONAL) Install neovim
    cd ~/software/
    git clone https://github.com/neovim/neovim.git
    sudo apt update
    sudo apt install cmake
    cd neovim; make; sudo make install
    #To use uday's neovim config
        ln -s ~/access-UK/neovim/config ~/.config/nvim;
        Issue: E492: Not an editor command: PackerSync --> error is seen when yo do :PackerSync from neovim window
        Workaround:
          If you dont find :PackerInstall or :PackerSync on neovim window, then go to ~/.config/nvim/lua/udaytj/packer.lua and then do :so. Now you will be able to do :PackerSync and :PackerInstall.
          Refer - https://github.com/wbthomason/packer.nvim/issues/834
    #To use (nvchad's) NvChad's neovim config (https://nvchad.com/ <-- Docs and Features link available on top of this page)
        - Install ripgrep (https://github.com/BurntSushi/ripgrep?tab=readme-ov-file#installation)
           - $ curl -LO https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep_14.1.0-1_amd64.deb
             $ sudo dpkg -i ripgrep_14.1.0-1_amd64.deb
        - Install pyright which will be used by lsp server later - sudo pip3 install pyright
        - Install clangd (used by the lsp.lua)
          - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          - echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main" | sudo tee /etc/apt/sources.list.d/llvm.list
          - sudo apt update
          - sudo apt install clangd
        - Delete or rename old neovim config folder - mv ~/.config/nvim ~/.config/oldnvim
        - cd ~/software; git clone https://github.com/shaakaud/starter ~/software/nvimcfg/starter
        - ln -s ~/software/nvimcfg/starter ~/.config/nvim
        - Open neovim, lazy vim will install all plugins. Press q and then run :MasonInstallAll.
        - you can find various theme names in https://nvchad.com/themes. Change the theme name at ~/software/nvimcfg/starter/lua/chadrc.lua and save file. Effect will be immediate.
        - Note: With nvchad the select text copy/paste may not work (based on the terminal mouse settings). Work around is as below:
          - GNOME Terminal	Shift + Mouse Drag
          - iTerm2 (macOS)	Use Option + Mouse Drag (or set Shift in preferences)

21. Note - vim-fugitive plugin works with git version > 2.10.2
22. samba server - to access linux folders from windows
    sudo apt-get install samba
    sudo smbpasswd -a udaytj
    sudo vi /etc/samba/smb.conf - at the end add
      [bkup]
      path = /home/udaytj/bkup
      available = yes
      valid users = udaytj
      read only = no
      browsable = yes
      public = yes
      writable = yes
    sudo service smbd restart
    from windows - win-r -> \\ukhost2.ddns.net\bkup or explorer->Network->right click, Map network drive ->
    In folder, give \\10.40.40.101\ and enable "Connect using different credentials" and then finish. Now when
    in Enter network credential dialogue box, click More choices, select Use a different username.
    Here give the username should be Computer name\username eg. 10.40.40.101\udaytj (udaytj is the username
    created in the samba server_and then password (samba password created in the samba server ie 10.40.40.101).
24. Install vncserver - https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-on-ubuntu-18-04
    sudo apt install autocutsel #This is for using Clipboard with xfce and tightvnc (copy paste between windows and vnc)
    #Point the vnc config to access-UK xstartup config
    ln -s ~/access-UK/vnc/xstartup ~/.vnc/xstartup

    Issue: If whatever change you make in ~/.vnc/xstartup does not take effect.
    Solution: do below copy after taking backup of /etc/X11/Xvnc-session
              sudo cp ~/.vnc/xstartup /etc/X11/Xvnc-session
              Now create a vncserver instance "vncserver -geometry 1920x1080 :2"
    (or)

    TigerVNC (only one vnc connection allowed here):
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    steps to install tigervnc and gnome-classing in ubuntu:
    sudo apt remove tightvncserver #uninstall tightvncserver if it is installed
    sudo apt update && sudo apt upgrade -y
    sudo apt install ubuntu-gnome-desktop -y
    sudo apt install gnome-tweaks -y
    sudo apt install gnome-shell-extensions #install gnome-classic (better GUI compared to gnome)
    sudo apt install tigervnc-standalone-server
    sudo apt install dbus-x11
    #below command is to start the vncserver - equivalent of "vncserver -geometry 1920x1080 :1" command. .vnc/xstartup file is not required for this.
    tigervncserver -xstartup /usr/bin/gnome-session-classic -SecurityTypes VncAuth,TLSVnc -geometry 1920x1080 -localhost no

23. access-UK/bin folder has pwd.sh. Below source commands stores the 'pwd' in $WS. Now if you use alias "base" as defined in aliases_bash,
    it will return to the $WS. Also the aliases_bash file uses $WS to navigate to different folders.
    - source ~/.zshrc && source ~/bin/pwd.sh

23. (OPTIONAL) If you want to install ubuntu-desktop, so that when you open the ubuntu-VM from ubuntu hosts virt-manager, it will open in the GUI
    - https://www.techrepublic.com/article/how-to-install-the-gnome-desktop-on-ubuntu-server-18-04/
    Issues seen:
    On vnc client if you use xfce4, the Terminal (gnome-terminal) will not work. When the ubuntu-desktop is running on the virt-manager VM the
    display of gnome-teriminal always will go there even though if you execute gnome-terminal from vncclient or ssh -Y client.
    Solution:
    https://askubuntu.com/questions/1050614/how-to-forward-x-over-ssh-to-run-gnome-terminal-remotely-18-04
    - gnome-terminal --disable-factory on the vncclient works. Right click, Applications->Run Program and type gnome-terminal --disable-factory
      (or), create a Launcher, Right click Create Launcher, name->when you type Terminal here, there will be drop downs for Terminal, select that
      and you will get all information required for gnome-terminal. Just add --disable-factory in the Command along with gnome-terminal.
    https://unix.stackexchange.com/questions/407831/how-can-i-launch-gnome-terminal-remotely-on-my-headless-server-fails-to-launch
    - To make it work in ssh. Do ssh -Y <ubuntu VM>. Now do export $(dbus-launch) and then issue gnome-terminal. This creates gnome-terminal
      using X11 forwarding correctly.

24. (OPTIONAL) If you want to install python, https://www.anaconda.com/distribution/
    If you want python IDE, download pycharm - https://www.jetbrains.com/pycharm/download/#section=linux

25. (OPTIONAL) To export DISPLAY of a linux server to Windows machin - https://seanthegeek.net/234/graphical-linux-applications-bash-ubuntu-windows/
    1. Install ubuntu in windows
    2. In bash run: echo "export DISPLAY=localhost:0.0" >> ~/.bashrc
    3. source ~/.bashrc
    4. Install x11-apps -> sudo apt-get install x11-apps
    5. Running remote GUI application over ssh - ssh -X udaytj@ukdev.ddns.net
       Now run the GUI application on that ssh prompt. The GUI display will be
       exported to Windows machine.



Verify:
=>$ pwd
/home/udayakut
=>$ ls -lart .* | grep access
lrwxrwxrwx   1 udayakut udayakut     18 Mar  2  2015 access-UK -> /drive_c/access-UK/
lrwxrwxrwx  1 udayakut udayakut     42 May 27  2015 .git-prompt.sh -> /home/udayakut/access-UK/git/git-prompt.sh*
lrwxrwxrwx  1 udayakut udayakut     36 Jun  1  2015 .bashrc.bak -> /home/udayakut/access-UK/bash/bashrc*
lrwxrwxrwx  1 udayakut udayakut     42 Jun  1  2015 .bash_profile -> /home/udayakut/access-UK/bash/bash_profile*
lrwxrwxrwx  1 udayakut udayakut     42 Jun  1  2015 .aliases_bash -> /home/udayakut/access-UK/bash/aliases_bash*
lrwxrwxrwx  1 udayakut udayakut     34 Jun  1  2015 .zshrc -> /home/udayakut/access-UK/zsh/zshrc*
lrwxrwxrwx  1 udayakut udayakut     37 Jun  1  2015 .netrc -> /home/udayakut/access-UK/others/netrc*
lrwxrwxrwx  1 udayakut udayakut     40 Jun  1  2015 .screenrc -> /home/udayakut/access-UK/others/screenrc*
lrwxrwxrwx  1 udayakut udayakut     39 Jun  1  2015 .inputrc -> /home/udayakut/access-UK/others/inputrc*
lrwxrwxrwx  1 udayakut udayakut     36 Jun  1  2015 .gdbinit -> /home/udayakut/access-UK/gdb/gdbinit*
lrwxrwxrwx  1 udayakut udayakut     50 Jun 25  2015 .vimrc -> /home/udayakut/access-UK/vim/vimfiles/vundle_vimrc*
lrwxrwxrwx  1 udayakut udayakut     38 Jun 25  2015 .vim -> /home/udayakut/access-UK/vim/vimbundle/
lrwxrwxrwx  1 udayakut udayakut     41 Aug 27 20:08 .tmux.conf -> /home/udayakut/access-UK/others/tmux.conf*
lrwxrwxrwx  1 udayakut udayakut     40 Sep  1 13:58 .zshrc.local -> /home/udayakut/access-UK/zsh/zshrc.local*
lrwxrwxrwx  1 udayakut udayakut     30 Sep 24 14:11 .bashrc -> /drive_c/access-UK/bash/bashrc*
lrwxrwxrwx  1 udayakut udayakut     36 Sep 24 14:11 .bashrc.local -> /drive_c/access-UK/bash/bashrc.local*
lrwxrwxrwx  1 udayakut udayakut     38 Sep 28 16:27 .gitconfig -> /home/udayakut/access-UK/git/gitconfig*
? ~ =>$

Verify (ALU related mostly):
? bin =>$ ls -lart
total 24
lrwxrwxrwx  1 udayakut udayakut   32 Feb 12  2015 blddb -> /drive_c/home/udayakut/bin/blddb*
drwxrwxr-x  2 udayakut udayakut 4096 Feb 12  2015 cscope_related/
lrwxrwxrwx  1 udayakut udayakut   29 Feb 12  2015 gv -> /drive_c/home/udayakut/bin/gv*
lrwxrwxrwx  1 udayakut udayakut   31 Feb 12  2015 gxtb -> /drive_c/home/udayakut/bin/gxtb*
lrwxrwxrwx  1 udayakut udayakut   31 Feb 12  2015 gxts -> /drive_c/home/udayakut/bin/gxts*
lrwxrwxrwx  1 udayakut udayakut   30 Feb 12  2015 mod -> /drive_c/home/udayakut/bin/mod*
drwxrwxr-x  2 udayakut udayakut 4096 Feb 12  2015 queen2-related/
lrwxrwxrwx  1 udayakut udayakut   48 Feb 18  2015 upload.queen2.newHire -> /drive_c/home/udayakut/bin/upload.queen2.newHire*
lrwxrwxrwx  1 udayakut udayakut   55 Nov  6 14:46 load_to_testbed.py -> /home/udayakut/access-UK/testbeds/testbed-mgmt/login.py
-rwxrwxr-x  1 udayakut udayakut 4718 Feb  5 10:55 diffconflicts*
lrwxrwxrwx  1 udayakut udayakut   36 Feb  5 14:15 bkup.sh -> /home/udayakut/access-UK/bin/bkup.sh*
drwxrwxr-x  4 udayakut udayakut 4096 Feb  5 14:15 ./
drwx------ 54 udayakut udayakut 4096 Feb 12 10:05 ../
? bin =>$
? bin =>$ cd queen2-related
? queen2-related =>$ ls -lart
total 12
lrwxrwxrwx 1 udayakut udayakut   52 Feb 12  2015 ftpxfer.sh -> /drive_c/home/udayakut/bin/queen2-related/ftpxfer.sh
lrwxrwxrwx 1 udayakut udayakut   63 Feb 12  2015 upload.queen2.newHire -> /drive_c/home/udayakut/bin/queen2-related/upload.queen2.newHire
drwxrwxr-x 2 udayakut udayakut 4096 Feb 12  2015 ./
drwxrwxr-x 4 udayakut udayakut 4096 Feb  5 14:15 ../
? queen2-related =>$

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To do some keyboard shortcuts:
http://duartes.org/gustavo/blog/post/home-row-computing/
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
