[user]
	email = udayakumar.thimma_janarthanan@nokia.com
	name = udayakut
[alias] 
    dt = difftool --dir-diff
    cset = diff-tree --no-commit-id --name-only -r
    lsm = ls-files --modified
    wl  = worktree list
	export = "!f() { /usr/bin/git show --pretty=format: $1 | tail -n +2 ; } ; f"
    logol = !git --no-pager log --pretty=oneline --abbrev-commit --graph --decorate -n20
    supercommitpatch = "!f() { patch -p1 -i $1 ; if [ $? -ne 0 ] ; then echo \"patching failed\" ; return 1 ; fi ; chmod +w $(git ls-files --modified) ; git add $(git ls-files --modified) ; git commit -m \"$2\" ; } ; f "
    statusporcut = !git status --porcelain | cut -c4-
    statusnewporcut = !git status --porcelain | grep '^??' | cut -c4-
    dpeek = !git diff --color=always | less -r
	ci = !cd ${GIT_PREFIX:-.} && /usr/local/timostools/git.d/git-helper.sh ci
	up = !/usr/local/timostools/git.d/git-helper.sh up
	set-hooks = !/usr/local/timostools/git.d/git-helper.sh set-hooks
	logg = !/usr/local/timostools/git.d/git-helper.sh logg
	update-helper = "!cd /usr/local/timostools/git.d; git pull; /usr/local/timostools/git.d/git-helper.sh install /usr/local/timostools/git.d"
	edit-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; $EDITOR `f`"
	add-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; git add `f`"
	log1 = log --oneline --decorate #log with one line per entry
	logf = log --name-only --decorate #log with filenames
	showf = show --name-only #git show with filename
	pullhead = "!f() { git rev-parse --abbrev-ref HEAD;}; git pull origin `f`" # Pull just the current branch, not everything
	outgoing = log --name-only @{upstream}..   # show to-be-pushed commits
	diffoutgoing = difftool @{u}...HEAD  # diff to-be-pushed commits
	incoming = "!f() { git rev-parse --abbrev-ref HEAD;}; git fetch -q origin `f`; git log ..@{u}" # show commits from the server that are not yet in your working copy
	incomingf = !br=$(git rev-parse --abbrev-ref HEAD) && git fetch -q origin $br && git diff --stat $mb ...@{u} # show file changes from the server that are not yet in your working copy
	checkoutbydate = "!sh -c \"git checkout `git rev-list -n 1 --before=\"$1\" HEAD`;\""
[diff]  
    tool = meld
	renameLimit = 25000

[push]
	default = upstream
[difftool]
	prompt = false
[remote "origin"]
	fetch = +refs/notes/*:refs/notes/*
[sr]
	githelperver = 43c9f1b9a4616f5b51120f94aa35fe8bb297fc7b
[merge]
	tool = diffconflicts
	renameLimit = 25000
[mergetool "diffconflicts"]
	cmd = diffconflicts vim $BASE $LOCAL $REMOTE $MERGED
	trustExitCode = true
	keepBackup = false

[apply]
	whitespace = nowarn
